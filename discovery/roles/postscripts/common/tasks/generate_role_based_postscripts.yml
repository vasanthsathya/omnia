# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Create a list of unique roles
  ansible.builtin.set_fact:
    unique_roles: "{{ (unique_roles | default([])) + ((item | default('') | string).split(',') | map('trim') | list) }}"
  loop: "{{ discovered_nodes | map(attribute='role') | select('defined') | list }}"
  when: item | length > 0

- name: Fetch list of unique supported roles
  ansible.builtin.set_fact:
    fetch_unique_roles: "{{ unique_roles | unique | select('in', supported_roles) | list }}"

- name: Read and convert slurm.json to variable
  ansible.builtin.set_fact:
    slurm_roles: "{{ lookup('file', hostvars['localhost']['input_project_dir'] + '/config/{{ provision_os }}/{{ provision_os_version }}/slurm.json') | from_json }}" # noqa: yaml[line-length]

- name: Generate postscripts for each role
  ansible.builtin.template:
    src: "{{ role_template_path }}"
    dest: "{{ postscripts_dest_path }}"
    mode: "{{ file_permissions }}"
  loop: "{{ fetch_unique_roles }}"
  vars:
    common_packages: "{{ slurm_roles.slurm.cluster | default([]) | selectattr('type', 'equalto', 'rpm') | list }}"
    role_specific_packages: "{{ slurm_roles[item].cluster | default([]) | selectattr('type', 'equalto', 'rpm') | list }}"
