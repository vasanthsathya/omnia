#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

# Usage: main.yml
common_plugin:
  kubernetes_dashboard: true
  habanalabs-device-plugin: false
  mpi-operator: true
  xilinx-device-plugin: true
  nfs-subdir-external-provisioner: true
  multus-device-plugin: true
  whereabouts-device-plugin: true

# Usage: prereq.yml
k8s_tmp_dir: "/root/k8s"
helm_install_fail_msg: "Failed to fetch helm path. Please verify helm installation and ensure the environment variable PATH is correctly set in the node.
 Re-run the playbook after verification."
ansible_python_interpreter: "/usr/bin/{{ hostvars['localhost']['python_package'] }}"

# Usage: deploy_kubernetes_dashboard.yml
k8s_dashboard_admin_file_source: "k8s_dashboard_admin.yaml"
k8s_dashboard_admin_file_dest: "{{ k8s_tmp_dir }}/k8s_dashboard_admin.yaml"
file_mode: "0644"
k8s_dashboard_loadbalancer_file_source: "k8s-dashboard-loadbalancer.yml"
k8s_dashboard_loadbalancer_file_dest: "{{ k8s_tmp_dir }}/k8s_dashboard_load_balancer.yaml"
nfs_server_manager_node: "{{ ansible_host }}"

# Usage: deploy_mpi_operator.yml
mpi_operator_dest_url: "{{ k8s_tmp_dir }}/{{ hostvars['localhost']['mpi_operator'] }}.yml"

# Usage: deploy_xilinx_device_plugin.yml
xilinx_device_plugin_yaml_dest: "{{ k8s_tmp_dir }}/{{ hostvars['localhost']['xilinx_device_plugin_pkg'] }}.yml"

# Usage: deploy_habana_device_plugin.yml
node_label_for_habana_device_plugin: "intel.com/gaudi.present"
k8s_version: "{{ hostvars['localhost']['k8s_version'] }}"
minimal_gaudi_k8s_version: "1.27"

# Usage: deploy_nfs_client_provisioner.yml
nfs_subdir_external_provisioner_dest_repo: "{{ k8s_tmp_dir }}/{{ hostvars['localhost']['nfs_subdir_external_provisioner_pkg'] }}.tar.gz"

# Usage deploy_multus_device_plugin.yml
network_spec_syntax_fail_msg: "Failed. Syntax errors present in network_spec.yml. Fix errors and re-run playbook again."
input_dir: "{{ hostvars['localhost']['input_project_dir'] }}"
project_name: "{{ hostvars['localhost']['project_name'] }}"
network_spec_path: "{{ input_dir }}/network_spec.yml"
multus_config: true
multus_deployment_template: "{{ role_path }}/templates/multus-daemonset.j2"
multus_deployment_manifest: "{{ k8s_tmp_dir }}/multus-daemonset.yml"
multus_deployment_manifest_mode: "0644"
multus_version: "v4.1.4-thick"
memory_limit_kube_multus: "1Gi"
memory_limit_multus_binary: "1Gi"
multus_command:
  - sh
  - -c
  - |
    if [ ! -f /host/opt/cni/bin/multus-shim ]; then
      cp /usr/src/multus-cni/bin/multus-shim /host/opt/cni/bin/multus-shim;
    fi
multus_deployment_dest_path: "{{ k8s_tmp_dir }}/multus-daemonset.yml"

# Usage deploy_whereabouts_device_plugin.yml
whereabouts_dest_folder: "{{ k8s_tmp_dir }}/{{ hostvars['localhost']['whereabouts_pkg'] }}.tar.gz"
whereabouts_folder: "{{ k8s_tmp_dir }}/whereabouts"
tmp_folder: "{{ k8s_tmp_dir }}"
wherabout_crds_folder: "{{ k8s_tmp_dir }}/whereabouts/doc/crds"
git_permissions: "0644"

# Usage: pod_status.yml
retries_count: "30"
delay_time: "5"
track_file_path: "/tmp/deployment_track.json"
k8s_not_accessible_msg: "Kubernetes not found or not accessible: {{ k8s_status.msg }}"
k8s_namespace_error_msg: "Namespace error: {{ k8s_status.namespace_error }}"
k8s_node_not_ready: "Some nodes are NotReady: {{ k8s_status.not_ready_nodes }}"
k8s_pods_failed_msg: "Some pods failed: {{ k8s_status.failed_pods }}"
k8s_status_success_msg: "All Kubernetes nodes are Ready and all pods are Running or Succeeded."

# Usage: set_environment.yml
proxy_port: "3128"
_no_proxy_list: "localhost,127.0.0.1,{{ hostvars['localhost']['admin_nic_ip'] }},{{ hostvars['localhost']['k8s_service_addresses'] }},{{ hostvars['localhost']['k8s_pod_network_cidr'] }},{{ hostvars['localhost']['oim_hostname'] }},{{ hostvars['localhost']['domain_name'] }}"   # noqa: yaml[line-length]
_routed_env:
  http_proxy: "http://{{ hostvars['localhost']['admin_nic_ip'] }}:{{ proxy_port }}"
  https_proxy: "http://{{ hostvars['localhost']['admin_nic_ip'] }}:{{ proxy_port }}"
  no_proxy: "{{ _no_proxy_list }}"
_direct_env:
  no_proxy: "{{ _no_proxy_list }}"
