# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Refresh mounts # WA: NFS stale file issue
  ansible.builtin.shell: |
    umount {{ share_path }}
    mount -a
  register: refresh_mounts
  ignore_errors: true
  changed_when: refresh_mounts.rc == 0
  when: slurm_installation_type == nfs_share_slurm

- name: Set facts for node ip # In case of multi NICs updates the right ip
  ansible.builtin.set_fact:
    node_ip: "{{ ansible_host }}"

- name: Update hosts file for all slurm groups
  block:
    - name: Update hosts file for all slurm groups
      ansible.builtin.lineinfile:
        dest: "{{ hosts_file_dest }}"
        line: "{{ hostvars[item].node_ip }} {{ hostvars[item]['ansible_fqdn'] }}
         {{ hostvars[item]['ansible_nodename'] | split('.') | first }}"
        state: present
        create: true
        mode: "{{ hosts_file_mode }}"
      with_items: "{{ ansible_play_hosts_all }}"
  rescue:
    - name: Updating hosts file failed
      ansible.builtin.fail:
        msg: "{{ hosts_update_fail_msg }}"

- name: Install common packages
  ansible.builtin.package:
    name: "{{ common_packages[ansible_os_family] }}"
    state: present

- name: Install utils packages
  ansible.builtin.include_tasks: install_utils_packages.yml
  when: utils_support is true

- name: Firewall service running
  ansible.builtin.systemd_service:
    name: firewalld
    state: started
    enabled: true

- name: Create user and group
  ansible.builtin.include_tasks: _user.yml

- name: Create the slurm directory on share
  ansible.builtin.file:
    path: "{{ share_path }}/{{ slurm_dir_name }}"
    state: directory
    owner: root
    group: root
    mode: "{{ common_mode }}"
  when: (slurm_installation_type == nfs_share_slurm)
  run_once: true

- name: Install and configure munge
  ansible.builtin.include_tasks: _munge.yml

- name: Edit out the PATH config for nfs_share
  when: (slurm_installation_type == nfs_share_slurm)
  block:
    - name: Comment line beginning with PATH= in /etc/bashrc
      ansible.builtin.lineinfile:
        path: "/etc/bashrc"
        regexp: '^PATH=.*'
        line: '# \g<0>'
        backrefs: true

    - name: Comment line beginning with export PATH= in /root/.bashrc
      ansible.builtin.lineinfile:
        path: "/root/.bashrc"
        regexp: '^export PATH=.*'
        line: '# \g<0>'
        backrefs: true
  rescue:
    - name: Edit out the PATH failure
      ansible.builtin.debug:
        msg: "{{ path_edit_msg }}"

- name: Slurm dict ops
  ansible.builtin.set_fact:
    slurm_conf_dict: "{{ __slurm_default_config | ansible.builtin.combine(slurm_config | default({})) }}"
    cgroup_conf_dict: "{{ __cgroup_default_config | ansible.builtin.combine(cgroup | default({})) }}"
    slurm_dbd_conf_dict: "{{ __slurm_dbd_default_config | ansible.builtin.combine(slurm_dbd_config | default({})) }}"
