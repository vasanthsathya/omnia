#  Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Set empty image list
  ansible.builtin.set_fact:
    image_versions: []

- name: Fetch and store image versions
  ansible.builtin.set_fact:
    image_versions: "{{ image_versions + [item.package + ':' + item.tag] }}"
  loop: "{{ hostvars['localhost']['k8s_packages_json'][hostvars['localhost']['software_stack']]['cluster'] }}"
  when: item.type == 'image'

# Pulling images from pulp - always,partial, never
- name: Pull K8s services docker images from pulp
  ansible.builtin.command: nerdctl pull {{ item }}
  with_items: "{{ image_versions }}"
  changed_when: true
  failed_when: false
  when:
    - hostvars['localhost']['k8s_offline_install']

# Pulling images directly when k8s_offline_install: false, enable_routed_internet: true

- name: Pull K8s services docker images from proxy
  ansible.builtin.command: nerdctl pull {{ item }}
  with_items: "{{ image_versions }}"
  changed_when: true
  failed_when: false
  environment:
    http_proxy: "http://{{ hostvars['localhost']['admin_nic_ip'] }}:{{ proxy_port }}"
    https_proxy: "http://{{ hostvars['localhost']['admin_nic_ip'] }}:{{ proxy_port }}"
    no_proxy: "localhost,127.0.0.1,{{ hostvars['localhost']['admin_nic_ip'] }},{{ hostvars['localhost']['k8s_service_addresses'] }},{{ hostvars['localhost']['k8s_pod_network_cidr'] }},{{ hostvars['localhost']['oim_hostname'] }},{{ hostvars['localhost']['domain_name'] }}"   # noqa: yaml[line-length]
  when:
    - not hostvars['localhost']['k8s_offline_install']
    - hostvars['localhost']['enable_routed_internet']

# Pulling images directly when k8s_offline_install: false, enable_routed_internet: false

- name: Pull K8s services docker images from dedicated internet
  ansible.builtin.command: nerdctl pull {{ item }}
  with_items: "{{ image_versions }}"
  changed_when: true
  failed_when: false
  environment:
    no_proxy: "localhost,127.0.0.1,{{ hostvars['localhost']['admin_nic_ip'] }},{{ hostvars['localhost']['k8s_service_addresses'] }},{{ hostvars['localhost']['k8s_pod_network_cidr'] }},{{ hostvars['localhost']['oim_hostname'] }},{{ hostvars['localhost']['domain_name'] }}"   # noqa: yaml[line-length]
  when:
    - not hostvars['localhost']['k8s_offline_install']
    - not hostvars['localhost']['enable_routed_internet']
