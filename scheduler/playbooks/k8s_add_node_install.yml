#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Add nodes to kubernetes cluster
  hosts: omnia_kubespray
  vars:
    kubespray_nfs_share: "/opt/omnia/kubespray/{{ hostvars['127.0.0.1']['cluster_var_name'] }}/{{ hostvars['127.0.0.1']['cluster_name'] }}"
    kubespray_logs_path: "/opt/omnia/log/kubespray/{{ hostvars['127.0.0.1']['cluster_var_name'] }}/{{ hostvars['127.0.0.1']['cluster_name'] }}/k8s_add_node.log"
    k8s_inv: "{{ kubespray_nfs_share }}/k8s_all_vars.yml"
    dir_mode: '0644'
  tasks:
    - name: Add nodes to kubernetes cluster using kubespray
      when:
        - hostvars[groups['kube_control_plane'][0]]['k8s_installation_status']
        - hostvars[groups['kube_control_plane'][0]]['k8s_new_nodes'] != ''
      block:
        - name: Copy k8s_add_node to kubespray nfs share
          ansible.builtin.copy:
            src: "{{ playbook_dir }}/k8s_add_node.yml"
            dest: "{{ kubespray_nfs_share }}/k8s_add_node.yml"
            mode: "{{ dir_mode }}"

        - name: Execute ansible-playbook for Kubernetes setup asynchronously
          ansible.builtin.shell: |
            set -o pipefail
            /venv/bin/ansible-playbook {{ kubespray_nfs_share }}/k8s_add_node.yml \
            -i {{ kubespray_nfs_share }}/inv_k8s \
            --extra-vars "@{{ k8s_inv }}" -vvv | \
            /usr/bin/tee {{ kubespray_logs_path }}
          async: 3600  # Set async timeout (e.g., 1 hour)
          poll: 0  # Non-blocking (continue the playbook without waiting for completion)
          register: result  # Register the result to capture job ID
          changed_when: false

        - name: Wait for the Kubernetes installation to finish. Logs can be checked at {{ kubespray_logs_path }}
          ansible.builtin.async_status:
            jid: "{{ result.ansible_job_id }}"  # Job ID from the previous task
          register: job_result
          until: job_result.finished
          retries: 60  # Retry the task 60 times (30 min total)
          delay: 30  # Wait 30 seconds between retries
