#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---
# Usage:firewall_settings.yml
idrac_firewall_ports:
  - "61613/tcp"
  - "8161/tcp"
  - "3306/tcp"
  - "3000/tcp"

prometheus_firewall_ports:
  - "2112/tcp"
  - "9090/tcp"

# Usage: create_podman_secrets.yml
mysql_root_password: "mysql_root_password"
mysql_user_password: "mysql_user_password"
mysql_user: "mysql_user"
mysql_secrets:
  - { name: "{{ mysql_root_password }}", value: "{{ hostvars['localhost']['mysqldb_root_password'] }}" }
  - { name: "{{ mysql_user_password }}", value: "{{ hostvars['localhost']['mysqldb_password'] }}" }
  - { name: "{{ mysql_user }}", value: "{{ hostvars['localhost']['mysqldb_user'] }}" }

# Usage: create_podman_volume.yml
dir_permissions_755: "0755"
oim_shared_path: "{{ hostvars['localhost']['oim_shared_path'] }}"
omnia_nfs_share: "{{ oim_shared_path }}/omnia"
sn_base_dir: "{{ omnia_nfs_share }}/service_nodes/{{ hostvars[inventory_hostname]['active_service_tag'] }}"
telemetry_data_dir: "{{ sn_base_dir }}/telemetry"
telemetry_log_dir: "{{ sn_base_dir }}/log/telemetry"
idrac_telemetry_dir: "{{ telemetry_data_dir }}/idrac_telemetry"

# mysql
mysql_data_dir: "{{ idrac_telemetry_dir }}/mysqldb"
mysql_log_dir: "{{ telemetry_log_dir }}/mysqldb"
mysqldb_podman_volumes:
  - { name: "mysqldb_data", path: "{{ mysql_data_dir }}" }
  - { name: "mysqldb_log", path: "{{ mysql_log_dir }}" }

# activemq
activemq_log_dir: "{{ telemetry_log_dir }}/activemq"
activemq_podman_volumes:
  - { name: "activemq_log", path: "{{ activemq_log_dir }}" }

# idrac_telemetry_receiver
idrac_telemetry_receiver_log_dir: "{{ telemetry_log_dir }}/idrac_telemetry_receiver"
idrac_telemetry_receiver_podman_volumes:
  - { name: "idrac_telemetry_receiver_log", path: "{{ idrac_telemetry_receiver_log_dir }}" }

# prometheus
prometheus_log_dir: "{{ telemetry_log_dir }}/prometheus"
prometheus_data_dir: "{{ telemetry_data_dir }}/prometheus/prometheus_data"
prometheus_podman_volumes:
  - { name: "prometheus_data", path: "{{ prometheus_data_dir }}" }
  - { name: "prometheus_log", path: "{{ prometheus_log_dir }}" }

# Usage: pull_podman_images.yml
omnia_images_dir_path: "{{ oim_shared_path }}/omnia/images"
load_images_fail_msg: |
  Failed to load images from the tar file {{ failed_images }}.
  Image tar file may be corrupt. To save a new image tar file, remove existing tar:
    cd /opt/omnia/images && \
    rm -f {{ failed_img_tarballs | join(' ') }}

  and then execute the utility below:

    ansible-playbook {{ playbook_dir }}/../utils/save_container_images.yml -v \
      -e 'container_images=[{{ failed_images | map('to_json') | join(',') }}]'

  After saving the images, re-run the telemetry playbook.

# Usage: render_telemetry_template.yml
service_node_base_dir: "/opt/omnia/service_nodes"
file_permissions: '0755'

# Usage: pcs_container_deployment.yml
wait_time_pcs_start: 120
pcs_telemetry_resource_script_path: "/opt/omnia/pcs/pcs_telemetry.sh"
pcs_sn_container_resources_shared_finished: "/opt/omnia/service_nodes/{{ active_service_tag }}/pcs/config/pcs_sn_container_resources_finished"
pcs_telemetry_failed_msg: "pcs_telemetry.sh execution failed."
pcs_container_name: "omnia_pcs"
xcat_resource_name: "XCATD-CHECK"
activemq_container_name: "activemq"
idrac_telemetry_receiver_container_name: "idrac_telemetry_receiver"
prometheus_pump_container_name: "prometheus_pump"
prometheus_container_name: "prometheus"
pcs_resources:
  - "{{ xcat_resource_name }}"

pcs_failed_resource_msg: |
  The deployment of pcs telemetry resources have failed. To resolve this issue,
  please run the utility/oim_cleanup.yml playbook to clean up any existing OIM resources.
  After the cleanup, you can re-run the prepare_oim.yml, disocvery_provision.yml and then telmetry.yml
  playbook to deploy the container and its resources on service_nodes.

# Usage: prometheus_config_update.yml
oim_prometheus_config_path: "{{ oim_shared_path }}/omnia/telemetry/prometheus/prometheus_config/prometheus.yml"
prometheus_yml_oim_temp_src: "{{ role_path }}/templates/prometheus_yml_oim.j2"

# Usage: mysqldb_creation.yml
mysql_container_name: "mysqldb"
mysql_database: "idrac_telemetrydb"
mysql_container_success_msg: "The MySQL container {{ mysql_container_name }} has been successfully created and is running."
mysql_container_failure_msg: |
  Deployment of the {{ mysql_container_name }} container has failed.

  If the container was created but is not in a running state, check the logs using:
    podman logs {{ mysql_container_name }}

mysql_port: 3306
max_retries: 10
delay_count: 5
create_db_retries: 10
create_db_delay: 10
mysql_db_create_query:
  - "CREATE DATABASE IF NOT EXISTS {{ mysql_database }}"
  - >
    CREATE TABLE IF NOT EXISTS {{ mysql_database }}.services (
      ip VARCHAR(255) PRIMARY KEY,
      serviceType INT,
      authType INT,
      auth VARCHAR(4096)
    )
mysql_database_create_failure_msg: |
  The creation of the MySQL database {{ mysql_database }} has failed.
