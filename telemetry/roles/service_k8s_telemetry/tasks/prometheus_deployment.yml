#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Persistent volume claim for prometheus
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: "{{ prometheus_pvc_name }}"
        namespace: "{{ telemetry_namespace }}"
      spec:
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: "{{ prometheus_storage }}"
        storageClassName: "{{ storage_class_name }}"

- name: Configmap for prometheus
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: "{{ prometheus_configmap_name }}"
        namespace: "{{ telemetry_namespace }}"
      data:
        prometheus.yml: |
          global:
            scrape_interval: 15s
          scrape_configs:
            - job_name: 'prometheus'
              static_configs:
                - targets: ['localhost:9090']

- name: Prometheus pod definition
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: "{{ prometheus_k8s_name }}"
        namespace: "{{ telemetry_namespace }}"
      spec:
        selector:
          matchLabels:
            app: "{{ prometheus_k8s_name }}"
        serviceName: "{{ prometheus_k8s_name }}"
        replicas: "{{ statefulset_replicas }}"
        template:
          metadata:
            labels:
              app: "{{ prometheus_k8s_name }}"
          spec:
            volumes:
              - name: prometheus-pvc-volume
                persistentVolumeClaim:
                  claimName: "{{ prometheus_pvc_name }}"
              - name: prometheus-config-volume
                configMap:
                  name: "{{ prometheus_configmap_name }}"

            containers:
              - name: prometheus
                image: "{{ prometheus_image }}"
                imagePullPolicy: "IfNotPresent"
                volumeMounts:
                  - name: prometheus-pvc-volume
                    mountPath: /prometheus
                  - name: prometheus-config-volume
                    mountPath: /config
                    readOnly: true
                env:
                  - name: node.name
                    value: prometheus
                  - name: PROMETHEUS_DB
                    value: poweredge_telemetry_metrics
                ports:
                  - containerPort: "{{ prometheus_container_port }}"
                command:
                  - "/bin/sh"
                  - "-c"
                  - >
                    /bin/prometheus
                    --config.file=/config/prometheus.yml
                    --storage.tsdb.path=/prometheus
                    --web.enable-lifecycle

- name: Service for prometheus
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: "{{ prometheus_k8s_name }}"
        namespace: "{{ telemetry_namespace }}"
        labels:
          app: "{{ prometheus_k8s_name }}"
      spec:
        type: LoadBalancer
        ports:
          - name: prometheus
            port: "{{ prometheus_container_port }}"
        selector:
          app: "{{ prometheus_k8s_name }}"
