#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Install python
  ansible.builtin.package:
    name: "{{ hostvars['localhost']['python_package_name'] }}"
    state: present

- name: Set ansible_python_interpreter to Python 3.11
  ansible.builtin.set_fact:
    ansible_python_interpreter: "{{ hostvars['localhost']['python_version'] }}"

- name: Ensure pip3 is available using ensurepip
  ansible.builtin.command: "{{ hostvars['localhost']['python_version'] }} -m ensurepip"
  changed_when: false

- name: Install pip packages from offline repo
  ansible.builtin.pip:
    name: "{{ item }}"
    extra_args: >
      --find-links={{ hostvars['localhost']['offline_pip_module_path'] }}/{{ item }}/
      --no-index
  loop: "{{ hostvars['localhost']['k8s_pip_packages'] }}"

- name: Check if k8s is running
  block:
    - name: Check if Kubernetes is running
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Node
      register: node_info
      failed_when: node_info.resources is not defined or node_info.resources | length == 0
  rescue:
    - name: Kubernetes is not running
      ansible.builtin.fail:
        msg: "{{ k8s_not_installed_fail_msg }}"

- name: Get all StorageClasses
  kubernetes.core.k8s_info:
    api_version: storage.k8s.io/v1
    kind: StorageClass
  register: sc_info

- name: Fail if the StorageClass does not exist - {{ storage_class_name }}
  ansible.builtin.fail:
    msg: "{{ storage_class_missing_fail_msg }}"
  when: storage_class_name not in (sc_info.resources | map(attribute='metadata.name') | list)
