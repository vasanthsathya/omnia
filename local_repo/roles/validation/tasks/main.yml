# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Define project input path
  ansible.builtin.set_fact:
    project_input_path: "{{ hostvars['localhost']['input_project_dir'] }}"

- name: Install prerequisites
  ansible.builtin.include_tasks: prerequisites.yml

- name: Validate software_config.json
  ansible.builtin.include_tasks: validate_software_config_json.yml

- name: Validate local_repo_config.yml
  ansible.builtin.include_tasks: validate_local_repo_config.yml

- name: Manage software csv file
  ansible.builtin.include_tasks: update_software_csv.yml

- name: Validate software json files present in config directory
  ansible.builtin.include_tasks: validate_json_path.yml

- name: Validate metadata
  ansible.builtin.include_tasks: validate_metadata.yml

- name: Validate k8s json
  ansible.builtin.include_tasks: validate_k8s_json.yml

- name: Loop through cluster configs to generate JSON files
  ansible.builtin.include_tasks: dynamic_k8s_json.yml
  loop: "{{ cluster_configs }}"
  loop_control:
    loop_var: cluster_item
  when: cluster_item.run_condition | bool

- name: Remove software lines if version is not in metadata
  ansible.builtin.include_tasks: remove_software_line.yml
  loop: "{{ software_cleanup_list }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.enabled
  vars:
    current_version: "{{ item.version }}"
    software_name: "{{ item.name }}"

- name: Validate user_repo certificates
  validate_user_repo:
    certs_path: "{{ user_repo_cert_dir }}"
    local_repo_config_path: "{{ local_repo_config_file }}"
    repo_key: "user_repo_url"
  register: cert_check_result
  failed_when: cert_check_result.failed | default(false)

- name: Check user registry reachability
  check_user_registry:
    config_file: "{{ local_repo_config_file }}"
    user_reg_cred_input: "{{ user_reg_cred_input }}"
    user_reg_key_path: "{{ user_reg_key_path }}"
    timeout: "{{ time_out }}"
  register: registry_check_result

- name: Warning - Display unreachable registries
  ansible.builtin.pause:
    prompt: "{{ registry_check_result.unreachable_registries | join(', ') }}\n{{ user_registry_msg }}"
    seconds: "{{ warning_wait_time_warning }}"
  when:
    - registry_check_result.unreachable_registries is defined
    - registry_check_result.unreachable_registries | length > 0
