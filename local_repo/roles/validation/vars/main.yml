# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

# Usage: update_software_csv.yml
software_csv_path: "/opt/omnia/log/local_repo/software.csv"
usage_message: |
  "WARNING:
  If you have modified any <software_name>.json file (e.g., `additional_software.json`),
  please run this playbook using:
    ansible-playbook local_repo.yml -e "softwares=<list of softwares names seprated by comma>"

  Example:
    ansible-playbook local_repo.yml -e "softwares=additional_software"
    ansible-playbook local_repo.yml -e "softwares=k8s,slurm"

  If you have NOT modified any software JSON files, you can run:
    ansible-playbook local_repo.yml"
softwares_var_not_provided: "No softwares variable provided. Skipping."
softwares_invalid_msg: "Invalid software_name(s) found: {{ softwares_list | difference(software_names) }}. Allowed values: {{ software_names }}"

# Usage: dynamic_k8s_json.yml
# dynamic_k8s_json_file: "{{ dynamic_k8s_json_folder }}/v{{ k8s_version }}/k8s_v{{ k8s_version }}.json"
base_k8s_json_file: "{{ project_input_path }}/config/{{ cluster_os_type }}/{{ cluster_os_version }}/k8s.json"
base_service_k8s_json_file: "{{ project_input_path }}/config/{{ cluster_os_type }}/{{ cluster_os_version }}/service_k8s.json"
dynamic_k8s_json_folder: "/opt/omnia/k8s_dynamic_json"
kubespray_url: "https://github.com/kubernetes-sigs/kubespray.git"
package_type_list: ["rpm", "deb", "tarball", "image", "manifest", "pip_module", "git"]
dynamic_k8s_json_log_dir: "/opt/omnia/log/local_repo"
# base_k8s_json_bkp_file: "{{ dynamic_k8s_json_folder }}/k8s_bkp.json"

# Usage: validate_k8s_json.yml
kubeadm_package_name: "kubeadm-v1.31.4"

# Usage: main.yml
nfs_shared_path: "/opt/omnia"
local_repo_config_file: "{{ project_input_path }}/local_repo_config.yml"
user_reg_cred_input: "{{ project_input_path }}/user_registry_credential.yml"
user_reg_key_path: "{{ project_input_path }}/.local_repo_credentials_key"
var_mount_percentage_limit: 80
var_mount_overuse_msg: |
  [WARNING] local_repo.yml may fail as /var mount usage has exceeded the limit of {{ var_mount_percentage_limit }}%.
  Current usage: {{ var_mount_use_percentage.stdout }}%.
  This could result in failures when downloading large packages or images.

  For OMNIA disk spaces requirements follow : https://omnia-doc.readthedocs.io/en/latest
user_repo_cert_dir: "{{ nfs_shared_path }}/user_repo_certs"

# Usage: prerequisites_redhat.yml, prerequisites_ubuntu.yml
max_retries: 10
yum_repos_path: "/etc/yum.repos.d"
yum_conf_path: "/etc/yum.conf"
dnf_conf_path: "/etc/dnf/dnf.conf"
dnf_max_parallel: 10
dnf_max_mode: "0644"

python_version: "{{ ansible_python_interpreter }}"
apt_conf_dest: /etc/apt/apt.conf

root_user_name: "root"
user_fail_msg: "Failed. Omnia playbooks should run as root user."
warning_wait_time_warning: 15
warning_msg_local_repo: "[WARNING] Omnia will remove any package/software conflicting with the requirements."

# Usage: validate_software_config_json.yml
sw_config_json_path: "{{ project_input_path }}/software_config.json"
fail_msg_software_config_json_file: "software_config.json file doesn't exist."
software_config_parameters_fail_msg: "Failed. Please ensure cluster_os_type, cluster_os_verion, repo_config, softwares are defined in software_config.json"
software_config_softwares_fail_msg: "Failed. softwares list cannot be empty in software_config.json. Atleast one software should be defined."
missing_json_fail_msg: "The json files for the following software stacks are missing at
{{ project_input_path }}/config/{{ cluster_os_type }}/{{ cluster_os_version }}/, this might be due to removal of json files from the path or the softwares
are not being supported on {{ cluster_os_type }} : {{ missing_json_list | map('regex_replace', '\\.json$', '') | list }}"
specific_softwares:
  - 'beegfs'
  - 'amdgpu'
  - 'k8s'
  - 'cuda'
  - 'ofed'
  - 'bcm_roce'
  - 'ucx'
  - 'rocm'
  - 'intelgaudi'
  - 'openmpi'
  - 'bcm_roce_libraries'
versions_fail_msg: "Versions were not defined for the following softwares: {{ failed_softwares | join(', ') }} in software_config.json.
Refer examples/template_{{ cluster_os_type }}_software_config.json and define version details accordingly in {{ project_input_path }}/software_config.json"
cluster_os_type_fail_msg: "Failed. The supported values of cluster_os_type is Fedora"
cluster_os_version_fail_msg_fedora: "Failed. The supported values of cluster_os_version is 38 when cluster_os_type is Fedora"
repo_config_fail_msg: "Failed. The supported values of repo_config is always, partial and never"
# cross_os_support_fail_msg: "Cross-OS is not supported: control_plane_os '{{ control_plane_os }}' does not match cluster_os_type '{{ cluster_os_type }}'"
valid_cluster_os_type:
  - 'fedora'
rhel_valid_os_versions:
  - '9.6'
rocky_valid_os_versions:
  - '9.4'

fedora_valid_os_versions:
  - '38'

valid_repo_config:
  - 'always'
  - 'partial'
  - 'never'

# Usage: validate_composable_role_config.yml
fail_msg_composable_config_file: "composable_role_config.yml file doesn't exist."
# Usage: validate_local_repo_config.yml
input_project_dir: "{{ hostvars['localhost']['input_project_dir'] }}"
local_repo_config_syntax_fail_msg: "Failed. Syntax errors present in local_repo_config.yml. Fix errors and re-run playbook again."
repo_store_path_fail_msg: "Failed. Ensure repo_store_path is defined and it should start with '/' and should not end with '/'"
directory_permissions: "0755"
rhel_os_url_fail_msg_crb: "Please provide code ready builder repo in rhel_os_url in local_repo_config.yml when cluster_os_type is rhel"
omnia_repo_url_rhel_fail_msg: "Failed. Please ensure omnia_repo_url_rhel is defined and the repos are provided in local_repo_config.yml"
omnia_repo_url_rhel_url_gpg_key_fail_msg: "Failed. Each item in omnia_repo_url_rhel should have 'url', 'gpgkey' and 'name' keys defined"
# omnia_repo_url_rocky_fail_msg: "Failed. Please ensure omnia_repo_url_rocky is defined and the repos are mentioned in local_repo_config.yml"
# omnia_repo_url_rocky_url_gpg_key_fail_msg: "Failed. Each item in omnia_repo_url_rocky should have 'url' and 'gpgkey' keys defined"
# omnia_repo_url_ubuntu_fail_msg: "Failed. Please ensure omnia_repo_url_ubuntu is defined and the repos are mentioned in local_repo_config.yml"
# omnia_repo_url_ubuntu_url_gpg_key_fail_msg: "Failed. Each item in omnia_repo_url_ubuntu should have 'url' and 'gpgkey' keys defined"
omnia_registry_fail_msg: "Failed. omnia_registry should be defined in local_repo_config.yml."
omnia_registry_string_fail_msg: "Each item in omnia_registry should be a string."

# Usage: validate_user_registry.yml
user_registry_fail_msg: "Failed. Please ensure user_registry is non empty list and
check if there is any indentation error in {{ project_input_path }}/local_repo_config.yml"
user_registry_fail_host_cert_path_msg: "Failed. Each item in user_registry should have 'host' and 'cert_path' keys defined"
time_out: 30
user_registry_msg: "Above host registries are not reachable. If the user registry is not accessible from the Omnia Infrastructure Manager, Omnia will download all the images for the software listed in software_config.json."   # noqa: yaml[line-length]
cert_path_failure_msg: "Certificate file path {{ item.item.cert_path }} does not exist on the Omnia Infrastructure Manager for host {{ item.item.host }}. Please verify that correct cert_path is given in {{ project_input_path }}/local_repo_config.yml"  # noqa: yaml[line-length]

# Usage: validate_user_repo_url.yml
user_repo_url_fail_msg: "Failed. Please ensure user_repo_url is proper and should not have jinja variables.
Also ensure that there is no indentation error in {{ project_input_path }}/local_repo_config.yml"
user_repo_url_fail_url_gpg_key_msg: "Failed. Each item in user_repo_url should have 'url', 'gpgkey' and 'name' keys defined"

# Usage: validate_json_path.yml
json_files_directory: "{{ project_input_path }}/config/{{ cluster_os_type }}/{{ cluster_os_version }}"

# Usage: validate_json_file.yml
software_key_fail_msg: "'{{ file_basename }}' key is missing in the JSON file."

# Usage: validate_json_subgroup_file.yml
cluster_key_fail_msg: "'cluster' key is missing within '{{ file_basename }}' in the JSON file."
rpm_properties_fail_msg: "Missing required properties for an item of type 'rpm' in the JSON file '{{ file_basename }}.json'."
ansible_galaxy_properties_fail_msg: "Missing required properties for an item of type 'ansible_galaxy_collection' in the JSON file '{{ file_basename }}.json'."
git_properties_fail_msg: "Missing required properties for an item of type 'git' in the JSON file '{{ file_basename }}.json'."
image_properties_fail_msg: "Missing required properties for an item of type 'image' in the JSON file '{{ file_basename }}.json'."
tarball_properties_fail_msg: "Missing required properties for an item of type 'tarball' in the JSON file '{{ file_basename }}.json'."
manifest_properties_fail_msg: "Missing required properties for an item of type 'manifest' in the JSON file '{{ file_basename }}.json'."
shell_properties_fail_msg: "Missing required properties for an item of type 'shell' in the JSON file '{{ file_basename }}.json'."
iso_properties_fail_msg: "Missing required properties for an item of type 'iso' in the JSON file '{{ file_basename }}.json'."
validation_failure_msg: "Validation failed for JSON file: {{ json_file.path }}. Please ensure all properties are defined in all items based on type"
subgroup_software_name_fail_msg: "Please ensure valid software names are defined in subgroups in the software_config.json file."

# Usage: validate_ubuntu_os_url.yml
url_format_fail_msg: "Failed. Invalid format for ubuntu_os_url.
Also ensure that there is no indentation error in {{ project_input_path }}/local_repo_config.yml"
url_unreachable_fail_msg: "Failed. Unreachable url {{ ubuntu_os_url }} input provided in ubuntu_os_url.
This can be due to intermittent internet connectivity issues as well.
Please ensure that the url mentioned in ubuntu_os_url is reachable and re-run local_repo.yml."
http_key: http

# Usage: validate_metadata.yml
meta_dest: "{{ nfs_shared_path }}/offline_repo/.data"
metadata_file_path: "{{ meta_dest }}/localrepo_metadata.yml"

# Usage: remove_k8s_line.yml
software_csv_file_path: "/opt/omnia/log/local_repo/software.csv"
k8s_local_repo_metadata_file_path: "/opt/omnia/log/local_repo/k8s_local_repo_metadata.yml"

# Usage: validate_rhel_os_url.yml
rhel_os_url_fail_msg: "Failed. Please ensure rhel_os_url is non empty list and
check if there is any indentation error for variable names in {{ project_input_path }}/local_repo_config.yml"
rhel_os_url_fail_url_gpg_key_msg: "Failed. Each item in rhel_os_url should have 'url', 'gpgkey' and 'name' keys defined"

# Usage: validate_bcm_roce.yml
bcm_roce_json_file: "{{ project_input_path }}/config/{{ cluster_os_type }}/{{ cluster_os_version }}/bcm_roce.json"
fail_msg_bcm_roce_json_file: "bcm_roce.json file is absent. Broadcom RoCE driver packages will not be downloaded."
bcm_roce_fail_msg: "bcm_roce is provided in software_config.json but neither url nor path is provided in bcm_roce.json file in
{{ project_input_path }}/config/{{ cluster_os_type }}/{{ cluster_os_version }}/"
bcm_roce_file_path_missing_msg: "Incorrect bcm_roce_file_path provided. Make sure bcm_roce file is present in the provided
 bcm_roce path."
bcm_roce_file_path_success_msg: "bcm_roce_file_path validated"
bcm_roce_file_path_fail_msg: "Failed. The path provided for bcm_roce file is not a tarball. please provide a valid tarball."
bcm_roce_src_warning_msg: "bcm_roce_libraries will not be installed on the nodes post provisioning. bcm_roce is provided in software_config.json
 but neither url nor path is provided in bcm_roce.json file in {{ project_input_path }}/config/{{ cluster_os_type }}/{{ cluster_os_version }}/"
bcm_roce_src_file_path_missing_msg: "Incorrect bcm_roce_libraries file_path provided. Make sure bcm_roce file is present in the provided
 bcm_roce path."
bcm_roce_src_file_path_success_msg: "bcm_roce_libraries file_path validated"
bcm_roce_src_file_path_fail_msg: "Failed. The path provided for bcm_roce_libraries file is not a tarball. please provide a valid tarball."
file_permission: "0755"
bcm_roce_driver_temp: /opt/omnia/.bcm_roce/driver
bcm_roce_source_temp: /opt/omnia/.bcm_roce/source
bcm_roce_driver_fail_msg: "Failed. The provided tarball does not have netxtreme-peer-mem deb packages, please provide a valid driver tarball."
bcm_roce_source_fail_msg: "Failed. The provided tarball does not have bnxt libraries, please provide a valid libraries tarball."
search_patterns:
  - "*netxtreme-bnxt_en*.tar.*"
  - "*libbnxt_re*.tar.*"
subgroup_missing_warning_msg: "bcm_roce mentioned in software_config.json, but bcm_roce sub-group is not available.
 bcm_roce_libraries will not be installed on the nodes post provisioning."
subgroup_warning_msg: "bcm_roce_libraries attribute is not mentioned in the bcm_roce sub-group in software_config.json,
 so bcm_roce_libraries will not be installed on the nodes post provisioning."
bcm_roce_libraries_warning_msg: "bcm_roce_libraries object not found in bcm_roce.json,
 so bcm_roce_libraries will not be installed during post provisioning."

# Usage: validate_site_config.yml
site_config_file: "{{ project_input_path }}/site_config.yml"
invalid_proxy_failure_msg: "Failed. Both http_proxy and https_proxy should be set for proxy variable provided in site_config.yml"
proxy_env_fail_msg: "Failed. The values for http_proxy {{ proxy[0].http_proxy }} and https_proxy {{ proxy[0].https_proxy }} in the
proxy variable of the site_config.yml should be set as environment variables http_proxy and https_proxy in the Omnia Infrastructure Manager.
The no_proxy environment variable should include the Omnia Infrastructure Manager hostname and the admin network IP address."
update_repos_fail_msg: "Failed to update repos. Verify proxy configuration in Omnia Infrastructure Manager for acccessing internet."
repo_retries: 5
repo_delay: 10
