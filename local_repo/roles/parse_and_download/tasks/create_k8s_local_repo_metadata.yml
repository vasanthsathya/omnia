# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Read existing metadata
  ansible.builtin.slurp:
    src: "{{ k8s_local_repo_metadata_file_path }}"
  register: metadata_raw
  ignore_errors: true

- name: Load or initialize metadata
  ansible.builtin.set_fact:
    metadata: >-
      {{
        metadata_raw.content | b64decode | from_yaml
        if metadata_raw is defined and metadata_raw.content is defined
        else {
          "k8s_local_repo_versions": [],
          "last_k8s_local_repo_version": "",
          "service_k8s_local_repo_versions": [],
          "last_service_k8s_local_repo_version": ""
        }
      }}

- name: Update metadata for {{ software_entry.name }}
  ansible.builtin.set_fact:
    metadata: >-
      {{
        metadata | combine({
          (software_entry.name + "_local_repo_versions"): (
            metadata[software_entry.name + "_local_repo_versions"] + [software_entry.version]
          ) | unique | sort,
          ("last_" + software_entry.name + "_local_repo_version"): software_entry.version
        }, recursive=True)
      }}

- name: Save updated metadata for {{ software_entry.name }}
  ansible.builtin.copy:
    content: "{{ metadata | to_nice_yaml }}"
    dest: "{{ k8s_local_repo_metadata_file_path }}"
    mode: "{{ file_mode }}"
