#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Initialise variables
  ansible.builtin.set_fact:
    k8s_support: false
    service_k8s_support: false
    slurm_support: false

- name: Load software_config.json
  ansible.builtin.include_vars:
    file: "{{ software_config_json_file }}"
    name: software_config

# Check if k8s is mentioned in software_config.json
- name: Check if k8s support is true
  ansible.builtin.set_fact:
    k8s_support: "{{ software_config.softwares | selectattr('name', 'equalto', 'k8s') | list | length > 0 }}"

- name: Check if service k8s support is true
  ansible.builtin.set_fact:
    service_k8s_support: "{{ software_config.softwares | selectattr('name', 'equalto', 'service_k8s') | list | length > 0 }}"

- name: Prepare kubernetes installation variables
  when: k8s_support is true
  block:
    - name: Extract k8s version
      ansible.builtin.set_fact:
        k8s_version: "{{ software_config.softwares | selectattr('name', 'equalto', 'k8s') | map(attribute='version') | first }}"
      # noqa: var-naming[no-jinja]

- name: Prepare kubernetes installation variables
  when: service_k8s_support is true
  block:
    - name: Extract k8s version
      ansible.builtin.set_fact:
        service_k8s_version: "{{ software_config.softwares | selectattr('name', 'equalto', 'service_k8s') | map(attribute='version') | first }}"
      # noqa: var-naming[no-jinja]

- name: Check if slurm support is true
  ansible.builtin.set_fact:
    slurm_support: "{{ software_config.softwares | selectattr('name', 'equalto', 'slurm') | list | length > 0 }}"
