# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Define project input path
  ansible.builtin.set_fact:
    project_input_path: "{{ hostvars['localhost']['input_project_dir'] }}"

- name: Ensure firewalld is installed and running
  ansible.builtin.dnf:
    name: firewalld
    state: present

- name: Start and enable firewalld
  ansible.builtin.service:
    name: firewalld
    state: started
    enabled: true

- name: Cleanup pcs container
  ansible.builtin.import_tasks: cleanup_pcs.yml

- name: Cleanup provision container
  ansible.builtin.import_tasks: cleanup_provision.yml

- name: Cleanup pulp container
  ansible.builtin.import_tasks: cleanup_pulp.yml

- name: Cleanup kubespray container
  ansible.builtin.import_tasks: cleanup_kubespray.yml

- name: Cleanup squid container
  ansible.builtin.import_tasks: cleanup_squid.yml
  when: hostvars['localhost']['enable_routed_internet']

- name: Cleanup iDRAC Telemetry containers
  when: hostvars['localhost']['idrac_telemetry_support']
  ansible.builtin.import_tasks: cleanup_idrac_telemetry_containers.yml

- name: Cleanup prometheus pump and prometheus container
  when:
    - hostvars['localhost']['idrac_telemetry_support']
    - hostvars['localhost']['idrac_telemetry_collection_type'] == "prometheus"
  ansible.builtin.import_tasks: cleanup_prometheus_containers.yml

- name: Cleanup Grafana container
  when: hostvars['localhost']['visualization_support']
  block:
    - name: Cleanup Grafana container
      ansible.builtin.import_tasks: cleanup_grafana.yml

    - name: Cleanup Loki and Promtail containers
      ansible.builtin.import_tasks: cleanup_loki_promtail.yml

- name: Remove telemetry directory if exists
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
    force: true
  register: directory_deletion
  until: directory_deletion is not failed
  retries: "{{ max_retries }}"
  failed_when: false
  with_items:
    - "{{ telemetry_cleanup_directory }}"

- name: Reload firewalld to apply changes
  ansible.builtin.command: firewall-cmd --reload
  changed_when: true
