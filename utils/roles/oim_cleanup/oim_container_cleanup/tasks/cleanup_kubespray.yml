#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Get list of all kubespray containers
  ansible.builtin.shell: |
    set -o pipefail
    podman ps -a --format "{{ '{{.Names}}' }}" | grep '^omnia_kubespray_'
  register: matched_kubespray_containers
  changed_when: false
  failed_when: false

- name: Set fact for list of containers
  ansible.builtin.set_fact:
    kubespray_container_list: "{{ matched_kubespray_containers.stdout_lines }}"
  when: matched_kubespray_containers.stdout_lines | length > 0

- name: Get container info for each Kubespray container
  containers.podman.podman_container_info:
    name: "{{ kubespray_container_name }}"
  register: kubespray_container_status
  loop: "{{ kubespray_container_list }}"
  loop_control:
    loop_var: kubespray_container_name
  when: kubespray_container_list is defined
  failed_when: false

- name: Stop Kubespray containers
  containers.podman.podman_container:
    name: "{{ item.1 }}"
    state: stopped
  with_indexed_items: "{{ kubespray_container_list }}"
  when:
    - kubespray_container_status.results[item.0].containers is defined
    - kubespray_container_status.results[item.0].containers | length > 0
    - kubespray_container_status.results[item.0].containers[0].State.Status == 'running'
  failed_when: false

- name: Remove Kubespray containers
  containers.podman.podman_container:
    name: "{{ item.1 }}"
    state: absent
    force_delete: true
  with_indexed_items: "{{ kubespray_container_list }}"
  when:
    - kubespray_container_status.results[item.0].containers is defined
    - kubespray_container_status.results[item.0].containers | length > 0

- name: Remove Kubespray cleanup directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
    force: true
  register: directory_deletion
  until: directory_deletion is not failed
  retries: "{{ max_retries }}"
  loop: "{{ kubespray_cleanup_directory }}"
  when: kubespray_container_list is defined
