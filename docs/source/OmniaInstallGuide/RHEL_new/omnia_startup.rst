Step 1: Deploy the Omnia core container
=========================================

The ``omnia_startup.sh`` is a one-stop script which deploys Omnia as a container on the Omnia Infrastructure Manager (OIM). A container is an isolated unit that packages an application and its dependencies, ensuring it runs consistently across any environment.
The Omnia container ensures smooth cluster deployments, independent of the host environment. The deployment includes:

 * Downloading the ``omnia_core`` container image
 * Setting up required mounts
 * Configuring secure SSH access to the container with public-private key pairs

Prerequisites
---------------

* The OIM must be connected to the internet in order to download the required packages for cluster deployment and configuration.
* The OIM should have two NICs in active state. One of them is used to connect to the public network whereas the other one is used to communicate within the cluster.
* Ensure that Podman container engine is installed on your OIM.
* If you want to use a NFS share for the omnia shared path, ensure that it has 755 permissions and ``no_root_squash`` is enabled for that mounted NFS share. Edit the ``/etc/exports`` file on the NFS server to include the ``no_root_squash`` option for the exported path.
    
    ::
        
        /<your_exported_path>  *(rw,sync,no_root_squash,no_subtree_check)

* Ensure that the OIM hostname prerequisites are met. Here's a list of guidelines to follow while setting up the hostname:

    .. include:: ../../Appendices/hostnamereqs.rst

Tasks performed by the ``omnia_startup.sh`` script
-----------------------------------------------------

The ``omnia_startup.sh`` script performs the following tasks:

	* The script prompts you to provide the path for the Omnia shared path, which can be a NFS share path or even a local file path.

	* Sets up the Omnia root password: The script prompts you to provide a combination of alphanumeric characters, which will be used as password to facilitate direct access to the ``omnia_core`` container.
	.. caution:: Do not use ``\,|,&,;,`,<>,*,?!,$,(),{},[]`` characters in your password.

	* The script generates SSH key pair and stores them in the ``/root/.ssh`` folder for both OIM and the containers.
	.. caution:: Do not delete any key pairs generated by Omnia, from the ``/root/.ssh``, as this leads to Omnia execution failure.

	* Initiates the container engine: The script initiates the Podman container engine present on the OIM.

	* Creates an input folder containing all the playbook input files and the software configs.

	* The script checks if Podman is installed and initiates the Podman socket. Further, it pulls the Omnia container image from the Dell registry and starts the ``omnia_core`` container.

Execute the ``omnia_startup.sh`` script
-----------------------------------------

To initiate the ``omnia_startup.sh`` script, execute the following commands:
::
    wget https://raw.githubusercontent.com/dell/omnia/refs/heads/staging/omnia_startup.sh
    chmod +x omnia_startup.sh
    sh omnia_startup.sh

Log in to the ``omnia_core`` container
----------------------------------------

Omnia provides two ways of logging in to the ``omnia_core`` container from the OIM.

1. **Through Podman**

Execute the following podman command to log in to the ``omnia_core`` container: ::

    podman exec -it -u root omnia_core bash

2. **Direct SSH login**

Execute the following command to log in to the ``omnia_core`` container via SSH: ::

    ssh omnia_core

The following are the main directories available in the ``omnia_core`` container:

         - The shared directory, which is mapped to ``$omnia_path`` in OIM: ``/opt/omnia``
         - The input directory: ``/opt/omnia/input``
         - The Omnia source code directory: ``/omnia``
         - The Omnia playbooks logs directory: ``/opt/omnia/log/core/playbooks``

.. note::

    * Do not delete any files manually from the omnia shared directory. Use the ``oim_cleanup.yml`` playbook to safely remove the entire omnia shared directory.
    * To re-deploy or delete the ``omnia_core`` container, you need to re-run the ``omnia_startup.sh`` script. Before re-running the ``omnia_startup.sh`` script, ensure that there are no other containers on the OIM except ``omnia_core``. If you have other containers running on the OIM, run the ``oim_cleanup.yml`` playbook to delete those.
    * All Omnia generated files will get deleted if the ``oim_core`` container is redeployed. But, user-generated files (for example, inventory files, mapping files) will still remain. 
    * Provide any file paths (ISO, mapping files, etc.) that are mentioned in input files in the ``/opt/omnia`` directory.