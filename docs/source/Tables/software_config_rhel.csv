Parameter,Mandatory/Optional,Details
**cluster_os_type**,Mandatory,"* **Type**: string
* Specify the operating system running on the OIM and the one to be provisioned on the compute nodes.
* **Accepted value**: ``rhel``"
**cluster_os_version**,Mandatory,"* **Type**: string
* The OS Version that will be provisioned on compute nodes.
* **Accepted value**: ``9.6``."
**iso_file_path**,Mandatory,"* **Type**: string
* Path where the user has placed the ``<OS>.iso`` image that needs to be provisioned on target nodes. 
* ``iso_file_path`` should contain the ``provision_os`` and ``provision_os_version`` values mentioned in the filename.
* **Example**: ``/opt/omnia/input/project_default/RHEL-9.6.0-20240419.25-x86_64-dvd1.iso``"
**repo_config**,Mandatory,"* **Type**: string
* Omnia sets up a local Pulp repository on the OIM and downloads all the necessary packages or images for the cluster into this repository. The behavior of the Pulp container varies depending on the value of the ``repo_config`` parameter.
* In case of ``always``, packages are downloaded and cached on OIM during ``local_repo.yml`` execution; compute nodes get the packages from OIM. Caching these packages allow them to be reused in future operations without needing to download them again.
* In case of ``partial``, packages are not pre-downloaded or cached. OIM downloads from upstream URLs when needed.
* In case of ``never``, the packages are not downloaded or cached, but streamed directly from the source URLs.
* **Accepted value**: ``always``, ``partial``, ``never``
* **Default value**: ``always``

.. note:: The following packages will always be downloaded from the local Pulp repository, regardless of the value of ``repo_config``:

       * ISOs
       * pip modules
       * manifests
       * tarballs
       * container images
       * AMD GPU drivers
       * OFED
       * CUDA"
**softwares**,Mandatory,"* **Type**: JSON list
* A JSON list of required software and (optionally) the software version.
* The following software should be listed with a version in the list: BeeGFS, AMD GPU, Kubernetes, CUDA, OFED, UCX, and ROCm.
* A minimum of one software should be provided in the list for ``local_repo.yml`` to execute correctly.
* The ``software_config.json`` will have the basic softwares present in it. To add additional software stacks, add the software under ``/opt/omnia/input/project_default/software_config.json``.
* For the list of all applicable softwares based on your ``<cluster_os_type>``, refer the templates at ``examples/template_<os>_software_config.json``. For example, ``examples/template_rhel_software_config.json``.

.. note:: The accepted names for software are taken from ``/opt/omnia/input/project_default/config/<cluster_os_type>/<cluster_os_version>``."
