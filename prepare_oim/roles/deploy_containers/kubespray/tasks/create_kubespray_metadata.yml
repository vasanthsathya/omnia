# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

---

- name: Read metadata file if it exists
  ansible.builtin.slurp:
    src: "{{ metadata_file_path }}"
  register: metadata_content
  ignore_errors: true

- name: Parse metadata YAML or initialize empty
  ansible.builtin.set_fact:
    metadata_dict: >-
      {{
        metadata_content.content | b64decode | from_yaml
        if metadata_content is defined and metadata_content.content is defined
        else {'k8s_kubespray_versions': {}}
      }}

- name: Check if k8s_version already exists
  ansible.builtin.set_fact:
    already_exists: "{{ k8s_version in metadata_dict.k8s_kubespray_versions }}"

- name: Add new version to dictionary
  ansible.builtin.set_fact:
    metadata_dict: >-
      {{
        metadata_dict |
        combine({
          'k8s_kubespray_versions': metadata_dict.k8s_kubespray_versions |
          combine({ k8s_version: hostvars['localhost']['k8s_to_kubespray_comp_ver'].compatible_tags['v' + k8s_version] })
        }, recursive=True)
      }}
  when: not already_exists

- name: Write updated metadata YAML (only if needed)
  ansible.builtin.copy:
    content: "{{ metadata_dict | to_nice_yaml }}"
    dest: "{{ metadata_file_path }}"
    mode: "{{ file_mode }}"
  when: not already_exists

- name: Debug message if already exists
  ansible.builtin.debug:
    msg: "Kubernetes version {{ k8s_version }} already exists in metadata, skipping update."
  when: already_exists
